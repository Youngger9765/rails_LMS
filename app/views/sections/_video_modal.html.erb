<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#<%=data_bs_target%>"">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id=<%=data_bs_target%> tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel"><%=title%></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <iframe 
                    id='existing-iframe-example' 
                    width="100%" 
                    height="500" 
                    src="<%=embed_url%>?enablejsapi=1"
                    title="YouTube video player" 
                    frameborder="0"
                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                    allowfullscreen
                    style="border: solid 10px #37474F"
                </iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var tag = document.createElement('script');
    tag.id = 'iframe-demo';
    tag.src = 'https://www.youtube.com/iframe_api';
    var firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    var lastWatchTime = 0;

    var player;
    function onYouTubeIframeAPIReady() {
        player = new YT.Player('existing-iframe-example', {
            events: {
                'onReady': onPlayerReady,
                'onStateChange': onPlayerStateChange,
                'onPlaybackRateChange': onPlaybackRateChange,
            }
        });
    }
    function getLastWatchTime() {
        var intervalId = window.setInterval(function () {
            lastWatchTime = Math.round(player.getCurrentTime());
            console.log("lastWatchTime:" + lastWatchTime);
        }, 10000);
    }
    function onPlayerReady(event) {
        document.getElementById('existing-iframe-example').style.borderColor = '#FF6D00';
        getLastWatchTime();
    }
    function changeBorderColor(data) {
        var playerStatus = data.playerStatus
        var speed = data.speed
        var isChangeSpeed = data.isChangeSpeed
        var currentTime = data.currentTime
        var color;
        if (playerStatus == -1) {
            color = "#37474F"; // unstarted = gray
            status = "unstarted"
        } else if (playerStatus == 0) {
            color = "#FFFF00"; // ended = yellow
            status = "ended"
        } else if (playerStatus == 1) {
            color = "#33691E"; // playing = green
            status = "playing"
        } else if (playerStatus == 2) {
            color = "#DD2C00"; // paused = red
            status = "paused"
        } else if (playerStatus == 3) {
            color = "#AA00FF"; // buffering = purple
            status = "buffering"
        } else if (playerStatus == 5) {
            color = "#FF6DOO"; // video cued = orange
            status = "cued"
        }
        if (color) {
            document.getElementById('existing-iframe-example').style.borderColor = color;
            // console.log("status: " + status);
            // console.log("speed: " + speed);
            // console.log("isChangeSpeed: " + isChangeSpeed);
            // console.log("currentTime: " + currentTime);
            // console.log("lastWatchTime: " + lastWatchTime);
            var video_log_data = {
                'video_id': <%= video_id %>,
                'status': status,
                'speed': speed,
                'isChangeSpeed': isChangeSpeed,
                'currentTime': currentTime,
                'lastWatchTime': lastWatchTime
            };
            console.log(video_log_data);

            $.ajax({
                type: 'POST',
                url: '/videos/save_log',
                data: {'video_log_data': video_log_data}
                // success: function () {
                //     //I assume you want to do something on controller action execution success?
                //     // $(this).addClass('done');
                //     console.log('done')
                // }
            });


        }
    }
    function onPlayerStateChange(event) {
        var data = getPlayerData(event);
        changeBorderColor(data);
    }
    function onPlaybackRateChange(event) {
        var data = getPlayerData(event);
        data['isChangeSpeed'] = true
        changeBorderColor(data);
    }
    function getPlayerData(event){
        var currentTime = event.target.getCurrentTime();
        var speed = event.target.getPlaybackRate();
        var playerStatus = event.target.getPlayerState();
        data = {
            "speed": speed,
            "playerStatus": playerStatus,
            "isChangeSpeed": null,
            "currentTime": currentTime,
            "lastWatchTime": lastWatchTime,
        }
        return data
    }
    function checkForward(event) {
        currentTime = event.target.getCurrentTime()
    }
    function checkReverse(event) {

    }


</script>